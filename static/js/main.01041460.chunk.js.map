{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/Statistics/Statistics.js","data/constans.js","App.js","index.js"],"names":["FeedbackDataButton","feedback","onLeaveFeedback","type","data-feedback","onClick","FeedbackOptions","options","map","option","Section","title","children","Notification","message","Statistics","good","neutral","bad","total","positivePercantage","FEEDBACK_OPTIONS","App","state","handleFeedback","target","dataset","setState","prevState","countTotalFeedback","countPositivePercantage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAEMA,EAAqB,kBAAM,YAAoC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC5C,OACE,wBAAQC,KAAK,SAASC,gBAAeH,EAAUI,QAASH,EAAxD,SACGD,MAeQK,EAXS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASL,EAAsB,EAAtBA,gBAClC,OAAOK,EAAQC,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAAoBR,SAAUQ,EAAQP,gBAAiBA,QCK5CQ,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCJQC,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,kCAAKA,MC4B5BC,EAzBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACGD,EAAQ,GACP,+BACE,wCAAWH,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,uDAA0BC,QAGnB,IAAVD,GAAe,cAAC,EAAD,CAAcL,QAAQ,0BCf/BO,EAAmB,CAAC,OAAQ,UAAW,OCuDrCC,E,4MAhDbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,eAAiB,YAAiB,IACxBvB,EADuB,EAAbwB,OACUC,QAApBzB,SACR,EAAK0B,UAAS,SAAAC,GAAS,sBAAQ3B,EAAW2B,EAAU3B,GAAY,O,EAGlE4B,mBAAqB,WAAO,IAAD,EACM,EAAKN,MACpC,OAFyB,EACjBP,KADiB,EACXC,QADW,EACFC,K,EAIzBY,wBAA0B,WAAO,IACvBd,EAAS,EAAKO,MAAdP,KACFG,EAAQ,EAAKU,mBACnB,OAAOV,EAAQ,EAAIY,KAAKC,MAAOhB,EAAOG,EAAS,KAAO,G,4CAExD,WAAU,IAAD,EACwBc,KAAKV,MAA5BP,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQc,KAAKJ,qBACbT,EAAqBa,KAAKH,0BAChC,OACE,gCACE,cAAC,EAAD,CAASnB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEJ,QAASc,EACTnB,gBAAiB+B,KAAKT,mBAI1B,cAAC,EAAD,CAASb,MAAM,aAAf,SACE,cAAC,EAAD,CACEK,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAzCdc,aCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.01041460.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst FeedbackDataButton = () => ({ feedback, onLeaveFeedback }) => {\r\n  return (\r\n    <button type=\"button\" data-feedback={feedback} onClick={onLeaveFeedback}>\r\n      {feedback}\r\n    </button>\r\n  );\r\n};\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map((option) => (\r\n    <FeedbackDataButton feedback={option} onLeaveFeedback={onLeaveFeedback} />\r\n  ));\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h3>{title}</h3>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","const Notification = ({ message }) => <p> {message}</p>;\r\n\r\nexport default Notification;\r\n","import propTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercantage }) => {\r\n  return (\r\n    <>\r\n      {total > 0 && (\r\n        <ul>\r\n          <li>Good: {good}</li>\r\n          <li>Neutral: {neutral}</li>\r\n          <li>Bad: {bad}</li>\r\n          <li>Total: {total}</li>\r\n          <li>Positive Percantage: {positivePercantage}</li>\r\n        </ul>\r\n      )}\r\n      {total === 0 && <Notification message=\"No feedback given\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: propTypes.number.isRequired,\r\n  neutral: propTypes.number.isRequired,\r\n  bad: propTypes.number.isRequired,\r\n  total: propTypes.number.isRequired,\r\n  positivePercantage: propTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","export const FEEDBACK_OPTIONS = [\"good\", \"neutral\", \"bad\"];\r\n","import { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport { FEEDBACK_OPTIONS } from './data/constans';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState(prevState => ({ [feedback]: prevState[feedback] + 1 }));\n  };\n  // Подсчитываем общее количество отзывов\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  //Подсчитываем количество позитивных отзывов (в процентах)\n  countPositivePercantage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback;\n    return total > 0 ? Math.round((good / total) * 100) : 0;\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercantage = this.countPositivePercantage();\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={FEEDBACK_OPTIONS}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercantage={positivePercantage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}